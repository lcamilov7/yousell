<div id='<%= dom_id(product) %>' class='my-3 shadow sm:w-2/5 w-4/5 relative rounded bg-neutral-600 p-5 sm:me-2 flex flex-col justify-center items-center'> <%# este dom_id nos servira para turbosstream action cable %>
  <h1 class='title font-bold text-2xl text-orange-500 text-center'><%= product.title %></h1>
  <span class='price font-bold text-gray-200 mt-2'>$<%= product.price %></span>
  <div class='text-gray-200 h-[50px] overflow-y-scroll w-full scroll-bar my-4 py-2'>
    <p class='description font-light text-sm text-center'><%= product.description %></p>
  </div>

  <%= image_tag(product.photo, class: 'rounded shadow object-cover w-[100%] h-[300px]') if product.photo.attached? %>

  <% if product.owner? %>
    <div class="flex flex-col items-center justify-center mt-4 absolute absolute top-3 right-3 rounded-full w-10 h-10">
      <%= link_to edit_product_path(product), data: { turbo_frame: 'modal' } do %>
        <i class="fa-solid fa-pen-to-square text-2xl text-gray-200 my-3 hover:text-gray-800"></i>
      <% end %>
      <%# El link de delete lo hicimos convencionalmente como se hace un metodo destroy aunque no estamos buscadno nada en la base de datos,
      tambien se podia llamar un metodo que hiciera lo mismo que hace el metodo destroy pero lo dejamos asi por convención
      tampoco habria que pasarle parametros al otro metodo que hiciera lo mismo pero aca si se los pasamos por convención un metodo destroy necesita un parametro %>
      <%= link_to product_path(product), data: { turbo_method: :delete, turbo_confirm: 'Delete product?' } do %>
        <i class="fa-solid fa-ban text-red-600 text-2xl mt-5 hover:text-red-800"></i>
      <% end %>
    </div>
  <% end %>

  <%= render partial: 'favorite', locals: { product: product } if product.owner? == false %> <%# aca hay que pasar la variable como local para poder hacer el turbo stream lo podemos ver en favorites controller %>
</div>
